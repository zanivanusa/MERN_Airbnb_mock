{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Comment from './Comment';\nimport { UserContext } from '../userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Photo(props) {\n  _s();\n  const [comment, setComment] = useState('');\n  const [isDetailView, setIsDetailView] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n  const toggleDetailView = () => {\n    setIsDetailView(!isDetailView);\n  };\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n    if (!user) {\n      // User is not logged in, handle accordingly (e.g., show a login prompt)\n      return;\n    }\n    if (!comment) {\n      // Comment field is empty, handle accordingly (e.g., show an error message)\n      return;\n    }\n\n    // Make API request to create a new comment\n    const res = await fetch('http://localhost:3001/comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        photoId: props.photo._id,\n        content: comment,\n        postedBy: user._id\n      })\n    });\n    if (res.ok) {\n      // Comment created successfully, perform any necessary actions\n      // such as updating the comments list or refreshing the photo display\n      // ...\n\n      // Reset the comment input field\n      setComment('');\n    } else {\n      // Handle error if the comment creation fails\n      // ...\n    }\n  };\n  const publishTime = new Date(props.photo.publishTime).toLocaleString([], {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n  const handleLikeClick = async () => {\n    if (!user) {\n      // User is not logged in, handle accordingly (e.g., show a login prompt)\n      return;\n    }\n\n    // Make API request to like/unlike the photo\n    const res = await fetch(`http://localhost:3001/photos/${props.photo._id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user._id\n      })\n    });\n    if (res.ok) {\n      // Like/unlike successful, perform any necessary actions\n      // such as updating the number of likes or refreshing the photo display\n      // ...\n    } else {\n      // Handle error if the like/unlike fails\n      // ...\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-dark mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Title: \", props.photo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Posted by: \", props.photo.postedBy.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Published at: \", publishTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Likes: \", props.photo.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLikeClick,\n        children: props.photo.likedBy.includes(user._id) ? 'Unlike' : 'Like'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card-img\",\n      src: \"http://localhost:3001/\" + props.photo.path,\n      alt: props.photo.name,\n      onClick: () => toggleDetailView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), isDetailView && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: comment,\n          onChange: handleCommentChange,\n          placeholder: \"Enter your comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: props.photo.comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Photo, \"KQfQCrCjAScH1PXXrxVUFi4OQco=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useContext","Comment","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Photo","props","_s","comment","setComment","isDetailView","setIsDetailView","user","handleCommentChange","event","target","value","toggleDetailView","handleCommentSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","photoId","photo","_id","content","postedBy","ok","publishTime","Date","toLocaleString","year","month","day","hour","minute","second","handleLikeClick","userId","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","username","likes","onClick","likedBy","includes","src","path","alt","onSubmit","type","onChange","placeholder","comments","map","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Photo.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Comment from './Comment';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Photo(props) {\r\n  const [comment, setComment] = useState('');\r\n  const [isDetailView, setIsDetailView] = useState(false);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const handleCommentChange = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const toggleDetailView = () => {\r\n    setIsDetailView(!isDetailView);\r\n  };\r\n\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!user) {\r\n      // User is not logged in, handle accordingly (e.g., show a login prompt)\r\n      return;\r\n    }\r\n\r\n    if (!comment) {\r\n      // Comment field is empty, handle accordingly (e.g., show an error message)\r\n      return;\r\n    }\r\n\r\n    // Make API request to create a new comment\r\n    const res = await fetch('http://localhost:3001/comments', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        photoId: props.photo._id,\r\n        content: comment,\r\n        postedBy: user._id,\r\n      }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      // Comment created successfully, perform any necessary actions\r\n      // such as updating the comments list or refreshing the photo display\r\n      // ...\r\n\r\n      // Reset the comment input field\r\n      setComment('');\r\n    } else {\r\n      // Handle error if the comment creation fails\r\n      // ...\r\n    }\r\n  };\r\n\r\n  const publishTime = new Date(props.photo.publishTime).toLocaleString([], {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n  });\r\n\r\n  const handleLikeClick = async () => {\r\n    if (!user) {\r\n      // User is not logged in, handle accordingly (e.g., show a login prompt)\r\n      return;\r\n    }\r\n\r\n    // Make API request to like/unlike the photo\r\n    const res = await fetch(`http://localhost:3001/photos/${props.photo._id}/like`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user._id,\r\n      }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      // Like/unlike successful, perform any necessary actions\r\n      // such as updating the number of likes or refreshing the photo display\r\n      // ...\r\n    } else {\r\n      // Handle error if the like/unlike fails\r\n      // ...\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card text-dark mb-4\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Title: {props.photo.name}</h5>\r\n        <p className=\"card-text\">Posted by: {props.photo.postedBy.username}</p>\r\n        <p className=\"card-text\">Published at: {publishTime}</p>\r\n        <p className=\"card-text\">Likes: {props.photo.likes}</p>\r\n        <button onClick={handleLikeClick}>{props.photo.likedBy.includes(user._id) ? 'Unlike' : 'Like'}</button>\r\n      </div>\r\n      <img\r\n        className=\"card-img\"\r\n        src={\"http://localhost:3001/\" + props.photo.path}\r\n        alt={props.photo.name}\r\n        onClick={() => toggleDetailView()}\r\n      />\r\n\r\n      {isDetailView && (\r\n        <>\r\n          {/* Comment form */}\r\n          <form onSubmit={handleCommentSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={comment}\r\n              onChange={handleCommentChange}\r\n              placeholder=\"Enter your comment\"\r\n            />\r\n            <button type=\"submit\">Add Comment</button>\r\n          </form>\r\n\r\n          {/* Render comments */}\r\n          <div className=\"comments\">\r\n            {props.photo.comments.map((comment) => (\r\n              <Comment key={comment._id} comment={comment} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}