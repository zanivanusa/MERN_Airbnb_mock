{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Comment from './Comment';\nimport { UserContext } from '../userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photo(props) {\n  _s();\n  const [comment, setComment] = useState('');\n  const {\n    userId\n  } = useContext(UserContext);\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n\n    // Make API request to create a new comment\n    const res = await fetch('http://localhost:3001/comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        photoId: props.photo._id,\n        content: comment,\n        postedBy: userId\n      })\n    });\n    if (res.ok) {\n      // Comment created successfully, perform any necessary actions\n      // such as updating the comments list or refreshing the photo display\n      // ...\n\n      // Reset the comment input field\n      setComment('');\n    } else {\n      // Handle error if the comment creation fails\n      // ...\n    }\n  };\n  const publishTime = new Date(props.photo.publishTime).toLocaleString([], {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-dark mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Title: \", props.photo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Posted by: \", props.photo.postedBy.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Published at: \", publishTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Likes: \", props.photo.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card-img\",\n      src: \"http://localhost:3001/\" + props.photo.path,\n      alt: props.photo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: comment,\n        onChange: handleCommentChange,\n        placeholder: \"Enter your comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: props.photo.comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Photo, \"ghRi8rFYLUwBN1ANJI9yVyg2J4o=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useContext","Comment","UserContext","jsxDEV","_jsxDEV","Photo","props","_s","comment","setComment","userId","handleCommentChange","event","target","value","handleCommentSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","photoId","photo","_id","content","postedBy","ok","publishTime","Date","toLocaleString","year","month","day","hour","minute","second","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","username","likes","src","path","alt","onSubmit","type","onChange","placeholder","comments","map","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Photo.js"],"sourcesContent":["import React, { useState, useContext  } from 'react';\r\nimport Comment from './Comment';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Photo(props) {\r\n    \r\n  const [comment, setComment] = useState('');\r\n  const { userId } = useContext(UserContext);\r\n\r\n  const handleCommentChange = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Make API request to create a new comment\r\n    const res = await fetch('http://localhost:3001/comments', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        photoId: props.photo._id,\r\n        content: comment,\r\n        postedBy:  userId\r\n      }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      // Comment created successfully, perform any necessary actions\r\n      // such as updating the comments list or refreshing the photo display\r\n      // ...\r\n\r\n      // Reset the comment input field\r\n      setComment('');\r\n    } else {\r\n      // Handle error if the comment creation fails\r\n      // ...\r\n    }\r\n  };\r\n\r\n  const publishTime = new Date(props.photo.publishTime).toLocaleString([], {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n  });\r\n\r\n  return (\r\n    <div className=\"card text-dark mb-4\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Title: {props.photo.name}</h5>\r\n        <p className=\"card-text\">Posted by: {props.photo.postedBy.username}</p>\r\n        <p className=\"card-text\">Published at: {publishTime}</p>\r\n        <p className=\"card-text\">Likes: {props.photo.likes}</p>\r\n      </div>\r\n      <img className=\"card-img\" src={\"http://localhost:3001/\" + props.photo.path} alt={props.photo.name} />\r\n\r\n      {/* Comment form */}\r\n      <form onSubmit={handleCommentSubmit}>\r\n        <input type=\"text\" value={comment} onChange={handleCommentChange} placeholder=\"Enter your comment\" />\r\n        <button type=\"submit\">Add Comment</button>\r\n      </form>\r\n\r\n      {/* Render comments */}\r\n      <div className=\"comments\">\r\n        {props.photo.comments.map((comment) => (\r\n          <Comment key={comment._id} comment={comment} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}