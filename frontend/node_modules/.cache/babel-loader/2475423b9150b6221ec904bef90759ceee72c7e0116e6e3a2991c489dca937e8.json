{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment(_ref) {\n  _s();\n  let {\n    comment\n  } = _ref;\n  const [authorName, setAuthorName] = useState('');\n  useEffect(() => {\n    // Fetch the user data for the comment author\n    fetchAuthorData(comment.postedBy);\n  }, [comment.postedBy]);\n  const fetchAuthorData = async userId => {\n    try {\n      const res = await fetch(`http://localhost:3001/users/${userId}`);\n      const data = await res.json();\n      setAuthorName(data.username);\n    } catch (error) {\n      console.error('Error fetching author data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-author\",\n      children: [\"User \", comment.postedBy, \" asked:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment-content\",\n      children: comment.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"J1x0r59pyOEStFLnkgIM/kTxkrE=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Comment","_ref","_s","comment","authorName","setAuthorName","useState","useEffect","fetchAuthorData","postedBy","userId","res","fetch","data","json","username","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","content","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Comment.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Comment({ comment }) {\r\n  const [authorName, setAuthorName] = useState('');\r\n  \r\n  useEffect(() => {\r\n    // Fetch the user data for the comment author\r\n    fetchAuthorData(comment.postedBy);\r\n  }, [comment.postedBy]);\r\n\r\n  const fetchAuthorData = async (userId) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:3001/users/${userId}`);\r\n      const data = await res.json();\r\n      setAuthorName(data.username);\r\n    } catch (error) {\r\n      console.error('Error fetching author data:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <p className=\"comment-author\">User {comment.postedBy} asked:</p>\r\n      <p className=\"comment-content\">{comment.content}</p>\r\n      {/* Add any additional comment information you want to display */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAC,eAAe,CAACL,OAAO,CAACM,QAAQ,CAAC;EACnC,CAAC,EAAE,CAACN,OAAO,CAACM,QAAQ,CAAC,CAAC;EAEtB,MAAMD,eAAe,GAAG,MAAOE,MAAM,IAAK;IACxC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BF,MAAO,EAAC,CAAC;MAChE,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BT,aAAa,CAACQ,IAAI,CAACE,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAMD,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBpB,OAAA;MAAGmB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAAC,OAAK,EAAChB,OAAO,CAACM,QAAQ,EAAC,SAAO;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChExB,OAAA;MAAGmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEhB,OAAO,CAACqB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjD,CAAC;AAEV;AAACrB,EAAA,CA7BQF,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}