{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Photos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Photo from './Photo';\nimport TagSearch from './TagSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [filteredPhotos, setFilteredPhotos] = useState([]);\n  useEffect(() => {\n    const fetchPhotos = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/photos');\n        const data = await res.json();\n        const filteredData = data.filter(photo => photo.dislikes < 2);\n        setPhotos(filteredData); //nastavim photos na vse tiste ki majo manj kot 2 dislika\n        setFilteredPhotos(filteredData);\n      } catch (error) {\n        console.error('Error fetching photos:', error);\n      }\n    };\n    fetchPhotos();\n  }, []);\n  const handleTagSearch = searchTerm => {\n    // Filter the photos based on the search term\n    if (searchTerm.trim() === '') {\n      setSearchResults([]); // Empty search term, show all photos\n    } else {\n      const results = photos.filter(\n      //ze tak gledamo samo slike z manj kot 2 dislika\n      photo => photo.tags && photo.tags.includes(searchTerm.toLowerCase()));\n      setSearchResults(results);\n    }\n  };\n  const handlePhotoUpdate = updatedPhoto => {\n    // Find the index of the updated photo in the photos array\n    const photoIndex = photos.findIndex(photo => photo._id === updatedPhoto._id);\n    if (photoIndex !== -1) {\n      // Update the photo in the photos array\n      const updatedPhotos = [...photos];\n      updatedPhotos[photoIndex] = updatedPhoto;\n      setPhotos(updatedPhotos);\n    }\n  };\n  const photosToRender = searchResults.length > 0 ? searchResults : filteredPhotos;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Photos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagSearch, {\n      onSearch: handleTagSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: photosToRender.map(photo => /*#__PURE__*/_jsxDEV(Photo, {\n        photo: photo,\n        onPhotoUpdate: handlePhotoUpdate\n      }, photo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"KSuqfcqwIo0jg5oLDk3/j8ASO8k=\");\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useState","useEffect","Photo","TagSearch","jsxDEV","_jsxDEV","Photos","_s","photos","setPhotos","searchResults","setSearchResults","filteredPhotos","setFilteredPhotos","fetchPhotos","res","fetch","data","json","filteredData","filter","photo","dislikes","error","console","handleTagSearch","searchTerm","trim","results","tags","includes","toLowerCase","handlePhotoUpdate","updatedPhoto","photoIndex","findIndex","_id","updatedPhotos","photosToRender","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","onPhotoUpdate","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Photos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Photo from './Photo';\r\nimport TagSearch from './TagSearch';\r\n\r\nfunction Photos() {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [filteredPhotos, setFilteredPhotos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPhotos = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:3001/photos');\r\n        const data = await res.json();\r\n        const filteredData = data.filter(photo => photo.dislikes < 2);\r\n        setPhotos(filteredData); //nastavim photos na vse tiste ki majo manj kot 2 dislika\r\n        setFilteredPhotos(filteredData);\r\n      } catch (error) {\r\n        console.error('Error fetching photos:', error);\r\n      }\r\n    };\r\n    fetchPhotos();\r\n  }, []);\r\n\r\n  const handleTagSearch = (searchTerm) => {\r\n    // Filter the photos based on the search term\r\n    if (searchTerm.trim() === '') {\r\n      setSearchResults([]); // Empty search term, show all photos\r\n    } else {\r\n      const results = photos.filter(//ze tak gledamo samo slike z manj kot 2 dislika\r\n        (photo) => photo.tags && photo.tags.includes(searchTerm.toLowerCase())\r\n      );\r\n      setSearchResults(results);\r\n    }\r\n  };\r\n  const handlePhotoUpdate = (updatedPhoto) => {\r\n    // Find the index of the updated photo in the photos array\r\n    const photoIndex = photos.findIndex((photo) => photo._id === updatedPhoto._id);\r\n\r\n    if (photoIndex !== -1) {\r\n      // Update the photo in the photos array\r\n      const updatedPhotos = [...photos];\r\n      updatedPhotos[photoIndex] = updatedPhoto;\r\n      setPhotos(updatedPhotos);\r\n    }};\r\n\r\n  const photosToRender = searchResults.length > 0 ? searchResults : filteredPhotos;\r\n\r\n  return (\r\n    <div>\r\n      <h3>Photos:</h3>\r\n      <TagSearch onSearch={handleTagSearch} />\r\n      <ul>\r\n        {photosToRender.map((photo) => (\r\n          <Photo photo={photo} key={photo._id} onPhotoUpdate={handlePhotoUpdate} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}