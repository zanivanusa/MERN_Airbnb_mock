{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { UserContext } from \"./userContext\";\nimport Header from \"./components/Header\";\nimport Index from \"./components/Index\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport AddPhoto from \"./components/AddPhoto\";\nimport DetailedPhoto from \"./components/DetailedPhoto\";\nimport Comment from \"./components/Comment\";\nimport Listing from \"./components/Listing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /**\n   * Podatek o tem, ali je uporabnik prijavljen ali ne, bomo potrebovali v vseh komponentah.\n   * State je dosegljiv samo znotraj trenutne komponente. Če želimo deliti spremenljivke z\n   * ostalimi komponentami, moramo uporabiti Context.\n   * Vsebino Contexta smo definirali v datoteki userContext.js. Poleg objekta 'user', potrebujemo\n   * še funkcijo, ki bo omogočala posodabljanje te vrednosti. To funkcijo definiramo v komponenti App\n   * (updateUserData). V render metodi pripravimo UserContext.Provider, naš Context je potem dosegljiv\n   * v vseh komponentah, ki se nahajajo znotraj tega providerja.\n   * V komponenti Login ob uspešni prijavi nastavimo userContext na objekt s trenutno prijavljenim uporabnikom.\n   * Ostale komponente (npr. Header) lahko uporabijo UserContext.Consumer, da dostopajo do prijavljenega\n   * uporabnika.\n   * Context se osveži, vsakič ko osvežimo aplikacijo v brskalniku. Da preprečimo neželeno odjavo uporabnika,\n   * lahko context trajno hranimo v localStorage v brskalniku.\n   */\n  const [user, setUser] = useState(localStorage.user ? JSON.parse(localStorage.user) : null);\n  const updateUserData = userInfo => {\n    localStorage.setItem(\"user\", JSON.stringify(userInfo));\n    setUser(userInfo);\n  };\n\n  /**\n   * Na vrhu vključimo komponento Header, z naslovom in menijem.\n   * Nato vključimo Router, ki prikaže ustrezno komponento v odvisnosti od URL naslova.\n   * Pomembno je, da za navigacijo in preusmeritve uporabljamo komponenti Link in Navigate, ki sta\n   * definirani v react-router-dom modulu. Na ta način izvedemo navigacijo brez osveževanja\n   * strani. Klasične metode (<a href=\"\"> in window.location) bi pomenile osvežitev aplikacije\n   * in s tem dodatno obremenitev (ponovni izris komponente Header, ponastavitev Contextov,...)\n   */\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        user: user,\n        setUserContext: updateUserData\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"My application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/photo/:id\",\n            element: /*#__PURE__*/_jsxDEV(DetailedPhoto, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/comment/:id\",\n            element: /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/publish\",\n            element: /*#__PURE__*/_jsxDEV(AddPhoto, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/listing\",\n            element: /*#__PURE__*/_jsxDEV(Listing, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R368d+doxAyxHvSKndQmRJMSNJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","UserContext","Header","Index","Login","Register","Profile","Logout","AddPhoto","DetailedPhoto","Comment","Listing","jsxDEV","_jsxDEV","App","_s","user","setUser","localStorage","JSON","parse","updateUserData","userInfo","setItem","stringify","children","Provider","value","setUserContext","className","title","fileName","_jsxFileName","lineNumber","columnNumber","path","element","exact","_c","$RefreshReg$"],"sources":["C:/Users/Žan/Desktop/sp_v4_sample/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { UserContext } from \"./userContext\";\nimport Header from \"./components/Header\";\nimport Index from \"./components/Index\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Logout from \"./components/Logout\";\nimport AddPhoto from \"./components/AddPhoto\";\nimport DetailedPhoto from \"./components/DetailedPhoto\";\nimport Comment from \"./components/Comment\";\nimport Listing from \"./components/Listing\";\n\nfunction App() {\n  /**\n   * Podatek o tem, ali je uporabnik prijavljen ali ne, bomo potrebovali v vseh komponentah.\n   * State je dosegljiv samo znotraj trenutne komponente. Če želimo deliti spremenljivke z\n   * ostalimi komponentami, moramo uporabiti Context.\n   * Vsebino Contexta smo definirali v datoteki userContext.js. Poleg objekta 'user', potrebujemo\n   * še funkcijo, ki bo omogočala posodabljanje te vrednosti. To funkcijo definiramo v komponenti App\n   * (updateUserData). V render metodi pripravimo UserContext.Provider, naš Context je potem dosegljiv\n   * v vseh komponentah, ki se nahajajo znotraj tega providerja.\n   * V komponenti Login ob uspešni prijavi nastavimo userContext na objekt s trenutno prijavljenim uporabnikom.\n   * Ostale komponente (npr. Header) lahko uporabijo UserContext.Consumer, da dostopajo do prijavljenega\n   * uporabnika.\n   * Context se osveži, vsakič ko osvežimo aplikacijo v brskalniku. Da preprečimo neželeno odjavo uporabnika,\n   * lahko context trajno hranimo v localStorage v brskalniku.\n   */\n  const [user, setUser] = useState(localStorage.user ? JSON.parse(localStorage.user) : null);\n  const updateUserData = (userInfo) => {\n    localStorage.setItem(\"user\", JSON.stringify(userInfo));\n    setUser(userInfo);\n  }\n\n  /**\n   * Na vrhu vključimo komponento Header, z naslovom in menijem.\n   * Nato vključimo Router, ki prikaže ustrezno komponento v odvisnosti od URL naslova.\n   * Pomembno je, da za navigacijo in preusmeritve uporabljamo komponenti Link in Navigate, ki sta\n   * definirani v react-router-dom modulu. Na ta način izvedemo navigacijo brez osveževanja\n   * strani. Klasične metode (<a href=\"\"> in window.location) bi pomenile osvežitev aplikacije\n   * in s tem dodatno obremenitev (ponovni izris komponente Header, ponastavitev Contextov,...)\n   */\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{\n        user: user,\n        setUserContext: updateUserData\n      }}>\n        <div className=\"App\">\n          <Header title=\"My application\"></Header>\n          <Routes>\n          <Route path=\"/photo/:id\" element={<DetailedPhoto />} />\n          <Route path=\"/comment/:id\" element={<Comment />} />\n\n\n\n            <Route path=\"/\" exact element={<Index />}></Route>\n            <Route path=\"/login\" exact element={<Login />}></Route>\n            <Route path=\"/register\" element={<Register />}></Route>\n            <Route path=\"/publish\" element={<AddPhoto />}></Route>\n            <Route path=\"/listing\" element={<Listing />}></Route>\n            <Route path=\"/profile\" element={<Profile />}></Route>\n            <Route path=\"/logout\" element={<Logout />}></Route>\n          </Routes>\n        </div>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}