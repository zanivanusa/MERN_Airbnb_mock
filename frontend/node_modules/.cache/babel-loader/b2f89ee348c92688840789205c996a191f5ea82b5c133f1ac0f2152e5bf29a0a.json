{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\DetailedPhoto.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DetailedPhoto(_ref) {\n  _s();\n  let {\n    photo\n  } = _ref;\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  // Function to handle submitting a new comment\n  const handleSubmitComment = async event => {\n    event.preventDefault();\n\n    // Make a request to the backend API to save the new comment\n    try {\n      const res = await fetch('http://localhost:3001/comments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          photoId: photo._id,\n          comment: newComment\n        })\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setComments([...comments, data]);\n        setNewComment('');\n      } else {\n        console.log('Failed to submit comment');\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n\n  // Function to handle voting on the photo\n  const handleVote = async () => {\n    // Make a request to the backend API to update the vote count for the photo\n    try {\n      const res = await fetch(`http://localhost:3001/photos/${photo._id}/vote`, {\n        method: 'POST'\n      });\n      if (res.ok) {\n        const updatedPhoto = {\n          ...photo,\n          likes: photo.likes + 1\n        };\n        // Update the selected photo in the parent component's state\n        updateSelectedPhoto(updatedPhoto);\n      } else {\n        console.log('Failed to vote');\n      }\n    } catch (error) {\n      console.log('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:3001/${photo.path}`,\n      alt: photo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: photo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Posted by: \", photo.postedBy.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Published Time: \", photo.publishTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", photo.likes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVote,\n      children: \"Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: comment.text\n    }, comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitComment,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailedPhoto, \"UfD/h9Ak6ftDPX32D4x5hoYrOFM=\");\n_c = DetailedPhoto;\nexport default DetailedPhoto;\nvar _c;\n$RefreshReg$(_c, \"DetailedPhoto\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","DetailedPhoto","_ref","_s","photo","comments","setComments","newComment","setNewComment","handleSubmitComment","event","preventDefault","res","fetch","method","headers","body","JSON","stringify","photoId","_id","comment","ok","data","json","console","log","error","handleVote","updatedPhoto","likes","updateSelectedPhoto","children","src","path","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","postedBy","username","publishTime","onClick","map","text","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/DetailedPhoto.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction DetailedPhoto({ photo }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  // Function to handle submitting a new comment\r\n  const handleSubmitComment = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Make a request to the backend API to save the new comment\r\n    try {\r\n      const res = await fetch('http://localhost:3001/comments', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          photoId: photo._id,\r\n          comment: newComment,\r\n        }),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setComments([...comments, data]);\r\n        setNewComment('');\r\n      } else {\r\n        console.log('Failed to submit comment');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n\r\n  // Function to handle voting on the photo\r\n  const handleVote = async () => {\r\n    // Make a request to the backend API to update the vote count for the photo\r\n    try {\r\n      const res = await fetch(`http://localhost:3001/photos/${photo._id}/vote`, {\r\n        method: 'POST',\r\n      });\r\n  \r\n      if (res.ok) {\r\n        const updatedPhoto = { ...photo, likes: photo.likes + 1 };\r\n        // Update the selected photo in the parent component's state\r\n        updateSelectedPhoto(updatedPhoto);\r\n      } else {\r\n        console.log('Failed to vote');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <img src={`http://localhost:3001/${photo.path}`} alt={photo.name} />\r\n      <h5>{photo.name}</h5>\r\n      <p>Posted by: {photo.postedBy.username}</p>\r\n      <p>Published Time: {photo.publishTime}</p>\r\n      <p>Likes: {photo.likes}</p>\r\n\r\n      <button onClick={handleVote}>Vote</button>\r\n\r\n      <h4>Comments:</h4>\r\n      {comments.map((comment) => (\r\n        <p key={comment._id}>{comment.text}</p>\r\n      ))}\r\n\r\n      <form onSubmit={handleSubmitComment}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailedPhoto;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}