{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Listing from './Listing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [listings, setListings] = useState([]);\n  useEffect(() => {\n    const fetchListings = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/listings');\n        if (response.ok) {\n          const data = await response.json();\n          setListings(data); // Update the listings state with the fetched data\n        } else {\n          console.error('Failed to fetch listings:', response.status);\n          // Handle the error or show an error message to the user\n        }\n      } catch (error) {\n        console.error('Error fetching listings:', error);\n        // Handle the error or show an error message to the user\n      }\n    };\n\n    fetchListings();\n  }, []);\n  const fetchPhotoData = async photoId => {\n    try {\n      const response = await fetch(`http://localhost:3001/photos/${photoId}`);\n      if (response.ok) {\n        const photoData = await response.json();\n        return photoData; // Return the fetched photo data\n      } else {\n        console.error('Failed to fetch photo:', response.status);\n        // Handle the error or show an error message to the user\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching photo:', error);\n      // Handle the error or show an error message to the user\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Listings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listings.map(listing => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"title: \", listing.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", listing.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), listing.photos.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photo,\n          alt: \"Listing Photo\"\n        }, photo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)), \"      \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }, this)]\n      }, listing._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Index, \"z9BV6DnffbB5IKTzJloxfuIWwk4=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","Listing","jsxDEV","_jsxDEV","Index","_s","listings","setListings","fetchListings","response","fetch","ok","data","json","console","error","status","fetchPhotoData","photoId","photoData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","listing","title","location","photos","photo","src","alt","_id","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Listing from './Listing';\r\n\r\nfunction Index() {\r\n  const [listings, setListings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchListings = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/listings');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setListings(data); // Update the listings state with the fetched data\r\n        } else {\r\n          console.error('Failed to fetch listings:', response.status);\r\n          // Handle the error or show an error message to the user\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching listings:', error);\r\n        // Handle the error or show an error message to the user\r\n      }\r\n    };\r\n\r\n    fetchListings();\r\n  }, []);\r\n\r\n  const fetchPhotoData = async (photoId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/photos/${photoId}`);\r\n      if (response.ok) {\r\n        const photoData = await response.json();\r\n        return photoData; // Return the fetched photo data\r\n      } else {\r\n        console.error('Failed to fetch photo:', response.status);\r\n        // Handle the error or show an error message to the user\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching photo:', error);\r\n      // Handle the error or show an error message to the user\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Listings:</h3>\r\n      <ul>\r\n        {listings.map((listing) => (\r\n          <div key={listing._id}>\r\n\r\n      <h4>title: {listing.title}</h4>\r\n      <p>Location: {listing.location}</p>\r\n      {listing.photos.map((photo) => (\r\n              <img src={photo} alt=\"Listing Photo\" key={photo} />\r\n            ))}      <br></br>\r\n      </div>\r\n      ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}