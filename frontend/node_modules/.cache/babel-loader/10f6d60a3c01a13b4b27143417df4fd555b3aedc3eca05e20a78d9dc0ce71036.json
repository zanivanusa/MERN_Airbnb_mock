{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Listing from './Listing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [listings, setListings] = useState([]);\n  useEffect(() => {\n    const fetchListings = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/listings');\n        if (response.ok) {\n          const data = await response.json();\n          setListings(data); // Update the listings state with the fetched data\n          console.log(data); // Log the listings to the console\n        } else {\n          console.error('Failed to fetch listings:', response.status);\n          // Handle the error or show an error message to the user\n        }\n      } catch (error) {\n        console.error('Error fetching listings:', error);\n        // Handle the error or show an error message to the user\n      }\n    };\n\n    fetchListings();\n  }, []);\n  useEffect(() => {\n    const fetchListingPhotos = async listingId => {\n      try {\n        console.log(\"ran\");\n        const response = await fetch(`http://localhost:3001/listings/${listingId}/photos`);\n        console.log(\"photos\"); // Example: Log the photos to the console\n        if (response.ok) {\n          const photos = await response.json();\n          console.log(photos); // Example: Log the photos to the console\n          return photos;\n        } else {\n          console.error('Failed to fetch listing photos:', response.status);\n          // Handle the error or show an error message to the user\n        }\n      } catch (error) {\n        console.error('Error fetching listing photos:', error);\n        // Handle the error or show an error message to the user\n      }\n    };\n\n    listings.forEach(listing => {\n      console.log(\"run\");\n      fetchListingPhotos(listing._id); //to returna slike\n    });\n  }, [listings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Listings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listings.map(listing => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Title: \", listing.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", listing.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), listing.photos && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"console.log();\", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Photos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), listing.photos.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.photoPath,\n            alt: \"Listing Photo\"\n          }, photo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, listing._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Index, \"M93oJzExcX0qXM4/69eO8rhKe1U=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","useEffect","Listing","jsxDEV","_jsxDEV","Index","_s","listings","setListings","fetchListings","response","fetch","ok","data","json","console","log","error","status","fetchListingPhotos","listingId","photos","forEach","listing","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","location","photo","src","photoPath","alt","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Listing from './Listing';\r\n\r\nfunction Index() {\r\n  const [listings, setListings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchListings = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/listings');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setListings(data); // Update the listings state with the fetched data\r\n          console.log(data); // Log the listings to the console\r\n        } else {\r\n          console.error('Failed to fetch listings:', response.status);\r\n          // Handle the error or show an error message to the user\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching listings:', error);\r\n        // Handle the error or show an error message to the user\r\n      }\r\n    };\r\n\r\n    fetchListings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchListingPhotos = async (listingId) => {\r\n      try {\r\n        console.log(\"ran\");\r\n\r\n        const response = await fetch(`http://localhost:3001/listings/${listingId}/photos`);\r\n        console.log(\"photos\"); // Example: Log the photos to the console\r\n        if (response.ok) {\r\n          const photos = await response.json();\r\n          console.log(photos); // Example: Log the photos to the console\r\n          return photos;\r\n        } else {\r\n          console.error('Failed to fetch listing photos:', response.status);\r\n          // Handle the error or show an error message to the user\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching listing photos:', error);\r\n        // Handle the error or show an error message to the user\r\n      }\r\n    };\r\n\r\n    listings.forEach((listing) => {\r\n      console.log(\"run\");\r\n      fetchListingPhotos(listing._id);//to returna slike\r\n    });\r\n  }, [listings]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Listings:</h3>\r\n      <ul>\r\n        {listings.map((listing) => (\r\n          <div key={listing._id}>\r\n            <h4>Title: {listing.title}</h4>\r\n            <p>Location: {listing.location}</p>\r\n            {listing.photos && (\r\n              <div>\r\n                console.log();\r\n                <h4>Photos:</h4>\r\n                {listing.photos.map((photo) => (\r\n                  <img src={photo.photoPath} alt=\"Listing Photo\" key={photo._id} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            <br />\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}