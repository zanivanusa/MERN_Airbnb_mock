{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u017Dan\\\\Desktop\\\\sp_v4_sample\\\\frontend\\\\src\\\\components\\\\Photo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Comment from './Comment';\nimport { UserContext } from '../userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Photo(props) {\n  _s();\n  const [comment, setComment] = useState('');\n  const [isDetailView, setIsDetailView] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  const handleCommentChange = event => {\n    setComment(event.target.value);\n  };\n  const handleLikeUpdate = updatedPhoto => {\n    setPhotos(prevPhotos => {\n      return prevPhotos.map(photo => {\n        if (photo._id === updatedPhoto._id) {\n          return {\n            ...photo,\n            likes: updatedPhoto.likes,\n            likedBy: updatedPhoto.likedBy\n          };\n        }\n        return photo;\n      });\n    });\n  };\n  const updatePhotos = newPhotos => {\n    setPhotos(newPhotos);\n  };\n  const toggleDetailView = () => {\n    setIsDetailView(!isDetailView);\n  };\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n    if (!user) {\n      console.log(\"user not logged in\");\n      return;\n    }\n    if (!comment) {\n      console.log(\"comment field can't be empty\");\n      return;\n    }\n    const res = await fetch('http://localhost:3001/comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        photoId: props.photo._id,\n        content: comment,\n        postedBy: user._id\n      })\n    });\n    if (res.ok) {\n      setComment('');\n    } else {\n      console.log(\"error creating comment\");\n    }\n  };\n  const publishTime = new Date(props.photo.publishTime).toLocaleString([], {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n  const handleLikeClick = async () => {\n    if (!user) {\n      console.log(\"user not logged in\");\n      return;\n    }\n    const hasLiked = props.photo.likedBy.includes(user._id);\n    const res = await fetch(`http://localhost:3001/photos/${props.photo._id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user._id\n      })\n    });\n    if (res.ok) {\n      const updatedPhoto = {\n        ...props.photo\n      };\n      if (hasLiked) {\n        updatedPhoto.likes -= 1;\n        updatedPhoto.likedBy = updatedPhoto.likedBy.filter(userId => userId !== user._id);\n      } else {\n        updatedPhoto.likes += 1;\n        updatedPhoto.likedBy.push(user._id);\n      }\n      handleLikeUpdate(updatedPhoto);\n    } else {\n      console.log(\"error liking/unliking photo\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-dark mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Title: \", props.photo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Posted by: \", props.photo.postedBy.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Published at: \", publishTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\"Likes: \", props.photo.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLikeClick,\n        children: props.photo.likedBy.includes(user._id) ? 'Unlike' : 'Like'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card-img\",\n      src: \"http://localhost:3001/\" + props.photo.path,\n      alt: props.photo.name,\n      onClick: () => toggleDetailView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), isDetailView && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: comment,\n          onChange: handleCommentChange,\n          placeholder: \"Enter your comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments\",\n        children: props.photo.comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Photo, \"D5ZKmDGEDhvreba+fEN5jzF3lVE=\");\n_c = Photo;\nexport default Photo;\nvar _c;\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"names":["React","useState","useContext","Comment","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Photo","props","_s","comment","setComment","isDetailView","setIsDetailView","photos","setPhotos","user","handleCommentChange","event","target","value","handleLikeUpdate","updatedPhoto","prevPhotos","map","photo","_id","likes","likedBy","updatePhotos","newPhotos","toggleDetailView","handleCommentSubmit","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","photoId","content","postedBy","ok","publishTime","Date","toLocaleString","year","month","day","hour","minute","second","handleLikeClick","hasLiked","includes","userId","filter","push","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","username","onClick","src","path","alt","onSubmit","type","onChange","placeholder","comments","_c","$RefreshReg$"],"sources":["C:/Users/Å½an/Desktop/sp_v4_sample/frontend/src/components/Photo.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Comment from './Comment';\r\nimport { UserContext } from '../userContext';\r\n\r\nfunction Photo(props) {\r\n  const [comment, setComment] = useState('');\r\n  const [isDetailView, setIsDetailView] = useState(false);\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  const { user } = useContext(UserContext);\r\n\r\n  const handleCommentChange = (event) => {\r\n    setComment(event.target.value);\r\n  };\r\n\r\n  const handleLikeUpdate = (updatedPhoto) => {\r\n    setPhotos((prevPhotos) => {\r\n      return prevPhotos.map((photo) => {\r\n        if (photo._id === updatedPhoto._id) {\r\n          return {\r\n            ...photo,\r\n            likes: updatedPhoto.likes,\r\n            likedBy: updatedPhoto.likedBy,\r\n          };\r\n        }\r\n        return photo;\r\n      });\r\n    });\r\n  };\r\n  \r\n  const updatePhotos = (newPhotos) => {\r\n    setPhotos(newPhotos);\r\n  };\r\n\r\n  const toggleDetailView = () => {\r\n    setIsDetailView(!isDetailView);\r\n  };\r\n\r\n  const handleCommentSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!user) {\r\n      console.log(\"user not logged in\");\r\n      return;\r\n    }\r\n\r\n    if (!comment) {\r\n      console.log(\"comment field can't be empty\");\r\n      return;\r\n    }\r\n\r\n    const res = await fetch('http://localhost:3001/comments', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        photoId: props.photo._id,\r\n        content: comment,\r\n        postedBy: user._id,\r\n      }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      setComment('');\r\n    } else {\r\n      console.log(\"error creating comment\");\r\n    }\r\n  };\r\n\r\n  const publishTime = new Date(props.photo.publishTime).toLocaleString([], {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n  });\r\n\r\n  const handleLikeClick = async () => {\r\n    if (!user) {\r\n      console.log(\"user not logged in\");\r\n      return;\r\n    }\r\n\r\n    const hasLiked = props.photo.likedBy.includes(user._id);\r\n\r\n    const res = await fetch(`http://localhost:3001/photos/${props.photo._id}/like`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user._id,\r\n      }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const updatedPhoto = { ...props.photo };\r\n        \r\n      if (hasLiked) {\r\n        updatedPhoto.likes -= 1;\r\n        updatedPhoto.likedBy = updatedPhoto.likedBy.filter((userId) => userId !== user._id);\r\n      } else {\r\n        updatedPhoto.likes += 1;\r\n        updatedPhoto.likedBy.push(user._id);\r\n      }\r\n\r\n      handleLikeUpdate(updatedPhoto);\r\n    } else {\r\n      console.log(\"error liking/unliking photo\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card text-dark mb-4\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Title: {props.photo.name}</h5>\r\n        <p className=\"card-text\">Posted by: {props.photo.postedBy.username}</p>\r\n        <p className=\"card-text\">Published at: {publishTime}</p>\r\n        <p className=\"card-text\">Likes: {props.photo.likes}</p>\r\n        <button onClick={handleLikeClick}>\r\n          {props.photo.likedBy.includes(user._id) ? 'Unlike' : 'Like'}\r\n        </button>\r\n      </div>\r\n      <img\r\n        className=\"card-img\"\r\n        src={\"http://localhost:3001/\" + props.photo.path}\r\n        alt={props.photo.name}\r\n        onClick={() => toggleDetailView()}\r\n      />\r\n\r\n      {isDetailView && (\r\n        <>\r\n          <form onSubmit={handleCommentSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={comment}\r\n              onChange={handleCommentChange}\r\n              placeholder=\"Enter your comment\"\r\n            />\r\n            <button type=\"submit\">Add Comment</button>\r\n          </form>\r\n\r\n          <div className=\"comments\">\r\n            {props.photo.comments.map((comment) => (\r\n              <Comment key={comment._id} comment={comment} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}